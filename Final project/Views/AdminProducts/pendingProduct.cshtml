@{
    ViewData["Title"] = "Product Management";
    Layout = "AdminLayout";
}

<!-- Main Content -->
<main class="main-content">
    <h1 class="dashboard-title">Product Approval Dashboard</h1>

    <!-- Stats Overview -->
    <div class="stats-container">
        <a class="stat-card" style="text-decoration: none">
            <div class="stat-icon">
                <i class="fas fa-box-open"></i>
            </div>
            <div class="stat-value" id="count-pending">@ViewBag.CountPendingProducts</div>
            <div class="stat-title">Pending Products</div>

        </a>
        <div class="stat-card">
            <div class="stat-icon">
                <i class="fas fa-check-circle"></i>
            </div>
            <div class="stat-value" id="count-accepted">@ViewBag.CountAcceptedProducts</div>
            <div class="stat-title">Approved Products</div>
       
        </div>
        <div class="stat-card">
            <div class="stat-icon">
                <i class="fas fa-times-circle"></i>
            </div>
            <div class="stat-value" id="count-rejected">@ViewBag.CountRegectedProducts</div>
            <div class="stat-title">Rejected Products</div>

        </div>
    </div>

    <!-- Products Section -->
    <!-- Updated View (AllProducts.cshtml) -->
    <div class="tickets-container">
        <!-- Add IDs to your count display elements -->
        <div class="section-header">
            <h2 class="section-title">Pending Product Approvals</h2>
        </div>

        <div class="ticket-list">
            @if (ViewBag.PendeingProducts.Count != 0){
                @for (int i=0 ; i<5 ; i++)
            {
                <div class="product-card" id="product-@ViewBag.PendeingProducts[i].id">
                    <img src="@ViewBag.PendeingProducts[i].Product_Images[0].image_url" class="product-image">
                    <div class="product-info">
                        <div class="product-title">@ViewBag.PendeingProducts[i].name</div>
                        <div class="product-meta">
                            <div class="meta-item">
                                <i class="fas fa-tag"></i> @ViewBag.PendeingProducts[i].category.name
                            </div>
                            <div class="meta-item">
                                <i class="fas fa-dollar-sign"></i> @ViewBag.PendeingProducts[i].price
                            </div>
                            <div class="meta-item">
                                <i class="fas fa-user"></i> @ViewBag.PendeingProducts[i].Seller.UserName
                            </div>
                            <div class="meta-item">
                                <span class="status-badge status-pending">Pending Review</span>
                            </div>
                        </div>
                    </div>
                    <div class="product-actions">
                        <!-- Use buttons with data attributes instead of links -->
                        <button class="action-btn btn-approve" data-id="@ViewBag.PendeingProducts[i].id">Approve</button>
                        <button class="action-btn btn-reject" data-id="@ViewBag.PendeingProducts[i].id">Reject</button>
                    </div>
                </div>
                if (i == ViewBag.PendeingProducts.Count - 1){ break; }
                }
            }else{
            <div id="empty-state-message" class="empty-state">
                <i class="fas fa-check-circle fa-3x"></i>
                <h3>All caught up!</h3>
                <p>You don't have any pending products to review.</p>
            </div>}
        </div>
        <a href="#" class="view-all-btn">View All Products</a>

    </div>

</main>


<script>
    document.addEventListener('DOMContentLoaded', function() {
          // Handle Approve buttons
          document.querySelectorAll('.btn-approve').forEach(button => {
              button.addEventListener('click', function() {
                  const productId = this.getAttribute('data-id');
                  processAction(productId, 'Approve');
              });
          });

          // Handle Reject buttons
          document.querySelectorAll('.btn-reject').forEach(button => {
              button.addEventListener('click', function() {
                  const productId = this.getAttribute('data-id');
                  processAction(productId, 'Reject');
              });
          });

          function processAction(productId, action) {
              const url = `/AdminProducts/${action}/${productId}`;

              fetch(url, {
                  method: 'GET',
                  headers: {
                      'X-Requested-With': 'XMLHttpRequest'
                  }
              })
              .then(response => {
                  if (response.ok) {
                      // Remove product card from UI
                      const productElement = document.getElementById(`product-${productId}`);
                      if (productElement) productElement.remove();

                      // Update counts
                      updateCounts(action);
                  } else {
                      alert('Action failed. Please try again.');
                  }
              })
              .catch(error => console.error('Error:', error));
          }

          function updateCounts(action) {
              const pendingEl = document.getElementById('count-pending');
              const acceptedEl = document.getElementById('count-accepted');
              const rejectedEl = document.getElementById('count-rejected');

              let pending = parseInt(pendingEl.textContent);
              let accepted = parseInt(acceptedEl.textContent);
              let rejected = parseInt(rejectedEl.textContent);

              pendingEl.textContent = --pending;

              if (action === 'Approve') {
                  acceptedEl.textContent = ++accepted;
              } else {
                  rejectedEl.textContent = ++rejected;
              }
          }
      });
</script>


