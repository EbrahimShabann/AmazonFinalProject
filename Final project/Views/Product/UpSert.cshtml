@model Final_project.ViewModel.Seller.CreateProductVM
@using System.Globalization

@functions {
    string GetColorHex(string colorName)
    {
        // Map color names to hex codes
        var colorMap = new Dictionary<string, string>
        {
            { "Red", "#FF0000" },
            { "Green", "#00FF00" },
            { "Blue", "#0000FF" },
            { "Yellow", "#FFFF00" },
            { "Orange", "#FFA500" },
            { "Purple", "#800080" },
            { "Pink", "#FFC0CB" },
            { "Brown", "#A52A2A" },
            { "Black", "#000000" },
            { "White", "#FFFFFF" },
            { "Gray", "#808080" },
            { "Silver", "#C0C0C0" },
            { "Gold", "#FFD700" },
            { "Beige", "#F5F5DC" },
            { "Turquoise", "#40E0D0" }
        };
        return colorMap.ContainsKey(colorName) ? colorMap[colorName] : "#CCCCCC";
    }
}


<style>
    .amazon-input {
        border-radius: 4px;
        border: 1px solid #a6a6a6;
        box-shadow: 0 1px 0 rgba(255,255,255,.5), 0 1px 0 rgba(0,0,0,.07) inset;
    }

        .amazon-input:focus {
            border-color: #e77600;
            box-shadow: 0 0 3px 2px rgba(228,121,17,.5);
        }

    .amazon-select {
        background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='%23343a40' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M2 5l6 6 6-6'/%3e%3c/svg%3e");
        background-position: right 0.75rem center;
        background-size: 16px 12px;
    }

    .amazon-variant-label {
        border: 1px solid #D5D9D9;
        border-radius: 8px;
        padding: 0.35rem 0.75rem;
        cursor: pointer;
        background: #F0F2F2;
    }

        .amazon-variant-label:hover {
            background: #E3E6E6;
        }

    .form-check-input:checked + .amazon-variant-label {
        background: #E3E6E6;
        border-color: #007185;
        box-shadow: 0 0 0 3px #c8f3fa;
    }

    .amazon-color-label {
        display: inline-block;
        width: 30px;
        height: 30px;
        border-radius: 50%;
        border: 2px solid #fff;
        box-shadow: 0 0 0 1px #D5D9D9;
        cursor: pointer;
    }

    .form-check-input:checked + .amazon-color-label {
        box-shadow: 0 0 0 2px #007185;
    }

    .amazon-submit-btn {
        background: #FFD814;
        border-color: #FCD200;
        color: #0F1111;
        font-weight: 500;
    }

        .amazon-submit-btn:hover {
            background: #F7CA00;
            border-color: #F2C200;
        }

    .border-dashed {
        border: 2px dashed #D5D9D9;
        background: #F7FAFA;
    }
</style>

<div class="card border-0 shadow-sm">
    <div class="card-header bg-white border-bottom py-3 d-flex justify-content-between align-items-center">
        <h4 class="mb-0">@(Model.id == "0" || Model.id == null ? "Add New Product" : "Edit Product")</h4>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
    </div>
    
    <div class="card-body p-4">
        <form id="upsertForm" enctype="multipart/form-data" asp-controller="Product" asp-action="UpSert">
            <div asp-validation-summary="All" class="alert alert-danger mb-4"></div>
            
            <div class="row g-4">
                <!-- Left Column -->
                <div class="col-lg-8">
                    <div class="bg-white p-4 rounded border">
                        <h5 class="mb-3">Product Information</h5>
                        
                        <div class="mb-3">
                            <label asp-for="name" class="form-label fw-bold">Product Name</label>
                            <input asp-for="name" class="form-control amazon-input" placeholder="Enter product title">
                            <span asp-validation-for="name" class="text-danger small"></span>
                        </div>
                        
                        <div class="row g-3">
                            <div class="col-md-6">
                                <label class="form-label fw-bold">Category</label>
                                <select asp-for="category_id" class="form-select amazon-select" asp-items="@(new SelectList(ViewBag.categories,"id","name"))">
                                    <option value="">Select Category</option>
                                </select>
                                <span asp-validation-for="category_id" class="text-danger small"></span>
                            </div>
                            <div class="col-md-6">
                                <label asp-for="Brand" class="form-label fw-bold">Brand</label>
                                <input asp-for="Brand" class="form-control amazon-input" placeholder="Brand name">
                                <span asp-validation-for="Brand" class="text-danger small"></span>
                            </div>
                        </div>
                        
                        <div class="row g-3 mt-2">
                            <div class="col-md-4">
                                <label asp-for="price" class="form-label fw-bold">Price</label>
                                <div class="input-group">
                                    <span class="input-group-text">$</span>
                                    <input asp-for="price" class="form-control amazon-input"
                                           type="number" placeholder="0.00">
                                </div>
                                <span asp-validation-for="price" class="text-danger small"></span>
                            </div>
                            <div class="col-md-4">
                                <label asp-for="stock_quantity" class="form-label fw-bold">Quantity</label>
                                <input asp-for="stock_quantity" class="form-control amazon-input" placeholder="0">
                                <span asp-validation-for="stock_quantity" class="text-danger small"></span>
                            </div>
                        </div>
                        
                        <div class="mt-4">
                            <h5 class="mb-3">Variants</h5>
                            <div class="row g-3">
                                <div class="col-md-6">
                                    <label class="form-label fw-bold">Sizes</label>
                                    <div class="d-flex flex-wrap gap-2">
                                        @foreach (var size in Model.AvailableSizes)
                                        {
                                            <div class="form-check">
                                                <input class="form-check-input" type="checkbox" 
                                                       name="SelectedSizes" value="@size" id="size-@size">
                                                <label class="form-check-label amazon-variant-label" 
                                                       for="size-@size">@size</label>
                                            </div>
                                        }
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <label class="form-label fw-bold">Colors</label>
                                    <div class="d-flex flex-wrap gap-2">
                                        @foreach (var color in Model.AvailableColors)
                                        {
                                            <div class="form-check">
                                                <input class="form-check-input" type="checkbox" 
                                                       name="SelectedColors" value="@color" id="color-@color">
                                                <label class="form-check-label amazon-color-label" 
                                                       for="color-@color" 
                                                       style="background-color: @(GetColorHex(color))"
                                                       title="@color"></label>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- Right Column -->
                <div class="col-lg-4">
                    <div class="bg-white p-4 rounded border">
                        <div class="mb-3">
                            <h5 >Product Images</h5>

                        </div>
                        
                        <div  class="mb-4">
                            <div id="image-upload-container" class="border-dashed p-3 text-center rounded">
                                <i class="fas fa-cloud-upload-alt fa-2x text-muted mb-2"></i>
                                <p class="mb-2">Drag & drop images here</p>
                                <p class="small text-muted mb-0">or</p>
                                @* <input type="file" class="d-none" id="fileInput" multiple accept="image/*"> *@
                                <button type="button" class="btn btn-sm btn-outline-secondary mt-2" onclick="getLastInputFile()">
                                    Browse Files
                                </button>
                            </div>
                        </div>
                        
                        <div id="image-previews" class="d-flex flex-wrap gap-2">
                            @* @foreach (var img in Model.ExistingImages)
                            {
                                <div class="position-relative" style="width: 80px; height: 80px;">
                                    <img src="@Url.Content(img.image_url)" class="img-thumbnail h-100 w-100 object-fit-cover">
                                    <button type="button" class="btn-close position-absolute top-0 end-0 bg-white p-1" aria-label="Remove"></button>
                                </div>
                            } *@
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="d-flex justify-content-end mt-4 gap-3">
                <a asp-action="Index" class="btn btn-outline-secondary">
                    Cancel
                </a>
                <button type="submit" class="btn btn-warning amazon-submit-btn">
                    @(Model.id == "0" || Model.id == null ? "Add Product" : "Save Changes")
                </button>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
         //allowed types and size
        const allowedTypes = ['image/jpg', 'image/jpeg', 'image/png', 'image/gif'];
        const maxFileSize= 5 * 1024 * 1024; // 5 MB

        const container= document.getElementById("image-upload-container");
        const previews= document.getElementById("image-previews");

        // on click on browse files button trigger this funtion to click last input file field
        function getLastInputFile(){
        const fileInputs = container.querySelectorAll('input[type="file"]');
        const lastInput = fileInputs[fileInputs.length - 1];

        // Use it:  click the last input file field
        lastInput.click();
        }
       
           //Add images and input fields
        //initial input
        addImageInput()
        function addImageInput() {
            const input = document.createElement("input");
            input.type = "file";
            input.name = "images";
            input.accept = "image/*";
            input.className = "form-control mt-2 imageInput";
            input.multiple = true;

            input.addEventListener("change", function(){
                if(input.files && input.files[0]){
                    const file= input.files[0];
                    if(!allowedTypes.includes(file.type)) {
                        alert("Invalid file type. Please upload an image.");
                        return;
                    }
                    if(file.size > maxFileSize) {
                        alert("File size exceeds the limit of 5 MB.");
                        return;
                    }
            
                    const reader = new FileReader();
                    reader.onload= function(e){
                        const img= document.createElement('img');
                        img.src= e.target.result;
                        img .style.maxHeight = "100px";
                        img.style.margin = "5px";
                        previews.appendChild(img);
                    }
                    reader.readAsDataURL(file);

                    // Add another input field after selecting a file
                    addImageInput(); 
                }
                });
                container.appendChild(input);
            };
      
    
    
    </script>
   
}
