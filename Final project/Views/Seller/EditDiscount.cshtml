@model Final_project.Models.discount
@{
    ViewData["Title"] = "Edit Discount";
    var products = ViewBag.Products as List<Final_project.Models.product>;
    var selectedProducts = ViewBag.SelectedProducts as List<string>;
    var categories = ViewBag.Categories as List<Final_project.Models.category>;
}
<div class="card shadow-sm" style="max-width:100%;margin:auto;">
    <div class="card-header bg-primary text-white">
        <h2 class="mb-0" style="font-weight:800;letter-spacing:0.5px;">Edit Discount</h2>
    </div>
    <div class="card-body">
        <form asp-action="EditDiscount" method="post">
            <input type="hidden" asp-for="id" />
            <div class="row g-3">
                <div class="col-md-12">
                    <label asp-for="description" class="form-label"></label>
                    <input asp-for="description" class="form-control" />
                    <span asp-validation-for="description" class="text-danger"></span>
                </div>
                <div class="col-md-6">
                    <label asp-for="discount_type" class="form-label"></label>
                    <select asp-for="discount_type" class="form-select" id="discount_type">
                        @if (Model.discount_type == "percentage") {
                            <option value="percentage" selected>Percentage</option>
                        } else {
                            <option value="percentage">Percentage</option>
                        }
                        @if (Model.discount_type == "fixed") {
                            <option value="fixed" selected>Fixed Amount</option>
                        } else {
                            <option value="fixed">Fixed Amount</option>
                        }
                    </select>
                    <span asp-validation-for="discount_type" class="text-danger"></span>
                </div>
                <div class="col-md-6">
                    <label asp-for="value" id="valueLabel" class="form-label">Value</label>
                    <input asp-for="value" class="form-control" type="number" step="0.01" id="valueInput" placeholder="Enter value" />
                    <small class="form-text text-muted" id="valueHelp">Select discount type first</small>
                    <span asp-validation-for="value" class="text-danger"></span>
                </div>
                <div class="col-md-6">
                    <label asp-for="start_date" class="form-label"></label>
                    <input asp-for="start_date" class="form-control" type="date" />
                    <span asp-validation-for="start_date" class="text-danger"></span>
                </div>
                <div class="col-md-6">
                    <label asp-for="end_date" class="form-label"></label>
                    <input asp-for="end_date" class="form-control" type="date" />
                    <span asp-validation-for="end_date" class="text-danger"></span>
                </div>
                <div class="col-md-6">
                    <label asp-for="is_active" class="form-label"></label>
                    <div class="form-check">
                        @Html.CheckBoxFor(m => m.is_active, new { @class = "form-check-input", id = "is_active" })
                        <label class="form-check-label" for="is_active">Active</label>
                    </div>
                    <span asp-validation-for="is_active" class="text-danger"></span>
                </div>
                <div class="col-md-6">
                    <label class="form-label">Category</label>
                    <select id="categorySelect" class="form-select">
                        <option value="">-- Select Category --</option>
                        @foreach (var cat in categories)
                        {
                            <option value="@cat.id">@cat.name</option>
                        }
                    </select>
                    <div class="form-check mt-2">
                        <input class="form-check-input" type="checkbox" id="applyToCategory" />
                        <label class="form-check-label" for="applyToCategory">Apply discount to all products in this category</label>
                    </div>
                </div>
                <div class="col-md-12">
                    <label class="form-label">Products</label>
                    <select name="productIds" id="productsSelect" class="form-select" multiple size="6">
                        @foreach (var p in products)
                        {
                            if (selectedProducts != null && selectedProducts.Contains(p.id)) {
                                <option value="@p.id" data-category="@p.category_id" selected>@p.name</option>
                            } else {
                                <option value="@p.id" data-category="@p.category_id">@p.name</option>
                            }
                        }
                    </select>
                    <span id="product-error" class="text-danger"></span>
                </div>
            </div>
            <div class="mt-4 text-end">
                <button type="submit" class="btn btn-primary px-4 py-2">Save Changes</button>
            </div>
        </form>
    </div>
</div>
@section Styles {
    <style>
        label.form-label {
            color: #0d6efd;
            font-weight: 600;
            letter-spacing: 0.2px;
        }
    </style>
}
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        $(document).ready(function() {
            function updateValueField() {
                var discountType = $('#discount_type').val();
                var valueLabel = $('#valueLabel');
                var valueInput = $('#valueInput');
                var valueHelp = $('#valueHelp');
                
                if (discountType === 'percentage') {
                    valueLabel.text('Percentage (%)');
                    valueInput.attr('placeholder', 'Enter percentage (e.g., 15 for 15%)');
                    valueHelp.text('Enter a number between 0 and 100');
                    valueInput.attr('min', '0');
                    valueInput.attr('max', '100');
                } else if (discountType === 'fixed') {
                    valueLabel.text('Fixed Amount (Â£)');
                    valueInput.attr('placeholder', 'Enter fixed amount (e.g., 10.50)');
                    valueHelp.text('Enter the fixed discount amount');
                    valueInput.attr('min', '0');
                    valueInput.removeAttr('max');
                } else {
                    valueLabel.text('Value');
                    valueInput.attr('placeholder', 'Select discount type first');
                    valueHelp.text('Select discount type first');
                    valueInput.removeAttr('min');
                    valueInput.removeAttr('max');
                }
            }
            

            updateValueField();
            

            $('#discount_type').change(function() {
                updateValueField();
            });


           $('#categorySelect').change(function() {
               var selectedCat = $(this).val();
               if (selectedCat) {
                   $('#productsSelect option').hide();
                   $('#productsSelect option[data-category="' + selectedCat + '"]').show();
               } else {
                   $('#productsSelect option').show();
               }
               $('#productsSelect').val([]);
               $('#applyToCategory').prop('checked', false);
           });


           $('#applyToCategory').change(function() {
               var selectedCat = $('#categorySelect').val();
               if ($(this).is(':checked') && selectedCat) {
                   var options = $('#productsSelect option[data-category="' + selectedCat + '"]');
                   options.prop('selected', true);
               } else {
                   $('#productsSelect option').prop('selected', false);
               }
           });

           $('form').submit(function(e) {
               var selectedProducts = $('select[name="productIds"]').val();
               if (!selectedProducts || selectedProducts.length === 0) {
                   e.preventDefault();
                   $('#product-error').text('You must select at least one product.');
               } else {
                   $('#product-error').text('');
               }
           });
        });
    </script>
} 