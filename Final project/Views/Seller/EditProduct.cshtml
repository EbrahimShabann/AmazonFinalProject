@model Final_project.Models.product

@{
    ViewData["Title"] = "Edit Product";
}

<h2>Edit Product</h2>

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
}

<form asp-action="EditProduct" method="post" enctype="multipart/form-data" id="editProductForm">
    @Html.AntiForgeryToken()
    <input type="hidden" asp-for="id" />
    <div class="form-group">
        <label asp-for="name"></label>
        <input asp-for="name" class="form-control" />
        <span asp-validation-for="name" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="description"></label>
        <textarea asp-for="description" class="form-control"></textarea>
        <span asp-validation-for="description" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="price"></label>
        <input asp-for="price" class="form-control" type="number" step="0.01" />
        <span asp-validation-for="price" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="discount_price"></label>
        <input asp-for="discount_price" class="form-control" type="number" step="0.01" />
        <span asp-validation-for="discount_price" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="stock_quantity"></label>
        <input asp-for="stock_quantity" class="form-control" type="number" />
        <span asp-validation-for="stock_quantity" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Brand"></label>
        <input asp-for="Brand" class="form-control" />
        <span asp-validation-for="Brand" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Colors"></label>
        <input asp-for="Colors" class="form-control" />
        <span asp-validation-for="Colors" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Sizes">Sizes</label>
        <select asp-for="Sizes" class="form-control">
            <option value="">Select Size</option>
            <option value="XS">XS</option>
            <option value="S">S</option>
            <option value="M">M</option>
            <option value="L">L</option>
            <option value="XL">XL</option>
            <option value="XXL">XXL</option>
            <option value="XXXL">XXXL</option>
            <option value="36">36</option>
            <option value="37">37</option>
            <option value="38">38</option>
            <option value="39">39</option>
            <option value="40">40</option>
            <option value="41">41</option>
            <option value="42">42</option>
            <option value="43">43</option>
            <option value="44">44</option>
            <option value="45">45</option>
            <option value="46">46</option>
            <option value="47">47</option>
            <option value="48">48</option>
            <option value="One Size">One Size</option>
        </select>
        <span asp-validation-for="Sizes" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="sku"></label>
        <input asp-for="sku" class="form-control" />
        <span asp-validation-for="sku" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="category_id">Category</label>
        <select asp-for="category_id" class="form-control">
            <option value="">Select Category</option>
            @if (ViewBag.Categories != null)
            {
                @foreach (var category in ViewBag.Categories)
                {
                    if (Model.category_id == category.id)
                    {
                        <option value="@category.id" selected>@category.name</option>
                    }
                    else
                    {
                        <option value="@category.id">@category.name</option>
                    }
                }
            }
        </select>
        <span asp-validation-for="category_id" class="text-danger"></span>
    </div>
    <div class="form-group mb-3">
        <label>Current Images</label>
        <div class="row">
            @if (Model.product_images != null && Model.product_images.Any())
            {
                foreach (var img in Model.product_images)
                {
                    <div class="col-md-3 mb-2">
                        <div class="card border-@(img.image_type == "main" ? "primary" : "secondary")">
                            <img src="@img.image_url" class="card-img-top" style="height:120px;object-fit:cover;" />
                            <div class="card-body p-2">
                                <div class="mb-1">
                                    <span class="badge @(img.image_type == "main" ? "bg-primary" : "bg-secondary")">@img.image_type?.ToUpper()</span>
                                </div>
                                <div class="d-flex justify-content-between">
                                    <button type="button" class="btn btn-outline-primary btn-sm me-1" onclick="document.getElementById('changeTypeForm-@img.id').submit();">Change Type</button>
                                    <button type="button" class="btn btn-danger btn-sm" onclick="document.getElementById('deleteImageForm-@img.id').submit();"><i class="fas fa-trash"></i></button>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="col-12"><span>No Images</span></div>
            }
        </div>
    </div>
    <div class="form-group mb-3">
        <label>Upload New Images</label>
        <div id="editDropArea" class="border border-primary rounded p-4 text-center mb-2" style="cursor:pointer; background:#f8f9fa;">
            <i class="fas fa-cloud-upload-alt fa-2x mb-2"></i><br />
            <span>Drag & Drop images here or <b>Click to Select</b></span>
            <input type="file" id="newImageFilesInput" name="newImageFiles" class="d-none" multiple accept="image/*" />
        </div>
        <small class="form-text text-muted">You can select multiple images. Choose one as Main, others as Sub. You can remove any before saving.</small>
        <div id="newImagePreviewContainer" class="row mt-2"></div>
    </div>
    <button type="submit" class="btn btn-primary">Save Changes</button>
    <a asp-action="ProductDetails" asp-route-id="@Model.id" class="btn btn-secondary">Back to Product Details</a>
    <a asp-action="MyProducts" class="btn btn-outline-secondary">Back to Products</a>
</form>


@if (Model.product_images != null && Model.product_images.Any())
{
    foreach (var img in Model.product_images)
    {
        <form id="changeTypeForm-@img.id" asp-action="ChangeProductImageType" method="post" style="display:none;">
            @Html.AntiForgeryToken()
            <input type="hidden" name="imageId" value="@img.id" />
            <input type="hidden" name="productId" value="@Model.id" />
            <input type="hidden" name="newType" value="@(img.image_type == "main" ? "sub" : "main")" />
        </form>
        <form id="deleteImageForm-@img.id" asp-action="DeleteProductImage" method="post" style="display:none;">
            @Html.AntiForgeryToken()
            <input type="hidden" name="imageId" value="@img.id" />
            <input type="hidden" name="productId" value="@Model.id" />
        </form>
    }
}

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
    document.getElementById('editProductForm').addEventListener('submit', function(e) {
        console.log('Form submit event triggered!');
    });
    document.querySelector('button[type="submit"]').addEventListener('click', function() {
        console.log('Save Changes button clicked!');
    });
    const editDropArea = document.getElementById('editDropArea');
    const newFileInput = document.getElementById('newImageFilesInput');
    editDropArea.addEventListener('click', () => newFileInput.click());
    editDropArea.addEventListener('dragover', e => { e.preventDefault(); editDropArea.classList.add('bg-light'); });
    editDropArea.addEventListener('dragleave', e => { e.preventDefault(); editDropArea.classList.remove('bg-light'); });
    editDropArea.addEventListener('drop', e => {
        e.preventDefault();
        editDropArea.classList.remove('bg-light');
        newFileInput.files = e.dataTransfer.files;
        previewNewImages({ target: newFileInput });
    });
    newFileInput.addEventListener('change', previewNewImages);

    function previewNewImages(event) {
        const files = event.target.files;
        const container = document.getElementById('newImagePreviewContainer');
        container.innerHTML = '';
        for (let i = 0; i < files.length; i++) {
            const file = files[i];
            const reader = new FileReader();
            reader.onload = function(e) {
                const col = document.createElement('div');
                col.className = 'col-md-3 mb-2';
                col.innerHTML = `
                    <div class='card position-relative'>
                        <img src='${e.target.result}' class='card-img-top' style='height:120px;object-fit:cover;' />
                        <div class='card-body p-2'>
                            <div class='form-check form-check-inline'>
                                <input class='form-check-input main-radio' type='radio' name='mainNewImageRadio' value='${i}' ${i === 0 ? 'checked' : ''} onchange='updateNewImageTypes()'>
                                <label class='form-check-label'>Main</label>
                            </div>
                            <div class='form-check form-check-inline'>
                                <input class='form-check-input sub-radio' type='radio' name='subNewImageRadio${i}' value='${i}' ${i !== 0 ? 'checked' : ''} onchange='updateNewImageTypes()'>
                                <label class='form-check-label'>Sub</label>
                            </div>
                            <input type='hidden' name='newImageTypes' value='${i === 0 ? 'main' : 'sub'}' />
                        </div>
                        <button type='button' class='btn btn-sm btn-danger position-absolute top-0 end-0 m-1' onclick='removeNewImage(${i})'><i class='fas fa-times'></i></button>
                    </div>
                `;
                container.appendChild(col);
            };
            reader.readAsDataURL(file);
        }
    }
    function updateNewImageTypes() {
        const mainRadios = document.querySelectorAll('.main-radio');
        const containers = document.querySelectorAll('#newImagePreviewContainer .card');
        mainRadios.forEach((radio, idx) => {
            const hidden = containers[idx].querySelector("input[type='hidden'][name='newImageTypes']");
            if (radio.checked) {
                hidden.value = 'main';
            } else {
                hidden.value = 'sub';
            }
        });
    }
    function removeNewImage(index) {
        const fileInput = document.getElementById('newImageFilesInput');
        const dt = new DataTransfer();
        const files = fileInput.files;
        for (let i = 0; i < files.length; i++) {
            if (i !== index) dt.items.add(files[i]);
        }
        fileInput.files = dt.files;
        previewNewImages({ target: fileInput });
    }
    </script>
} 