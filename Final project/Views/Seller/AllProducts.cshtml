@model IEnumerable<Final_project.Models.product>
@{
    ViewData["Title"] = "All Products in Database";
    var categoriesDict = ViewBag.CategoriesDict as Dictionary<string, string>;
}

<h2>All Products in Database</h2>

<div class="d-flex justify-content-end align-items-center gap-2 mb-3" style="gap:10px;">
    <a href="/Seller/MyProducts" class="btn btn-primary">Back to My Products</a>
    <a asp-action="AddProduct" class="btn btn-success">Add New Product</a>
</div>

<form method="get" class="mb-3">
    <div class="form-row row align-items-end gx-2 gy-1 flex-nowrap" style="flex-wrap:nowrap;">
        <div class="form-group col-auto">
            <input type="text" name="searchName" value="@ViewBag.SearchName" class="form-control" placeholder="Product Name" />
        </div>
        <div class="form-group col-auto">
            <input type="number" name="minPrice" value="@ViewBag.MinPrice" class="form-control" placeholder="Min Price" step="0.01" />
        </div>
        <div class="form-group col-auto">
            <input type="number" name="maxPrice" value="@ViewBag.MaxPrice" class="form-control" placeholder="Max Price" step="0.01" />
        </div>
        <div class="form-group col-auto">
            <select name="categoryId" class="form-control">
                <option value="">All Categories</option>
                @if (ViewBag.CategoriesDict != null)
                {
                    foreach (var cat in ViewBag.CategoriesDict)
                    {
                        if (ViewBag.SelectedCategoryId != null && ViewBag.SelectedCategoryId.ToString() == cat.Key)
                        {
                            <option value="@cat.Key" selected>@cat.Value</option>
                        }
                        else
                        {
                            <option value="@cat.Key">@cat.Value</option>
                        }
                    }
                }
            </select>
        </div>
        <div class="form-group col-auto">
            <button type="submit" class="btn btn-primary">Filter</button>
        </div>
    </div>
</form>

@{
    var groupedProducts = Model.GroupBy(product => !string.IsNullOrEmpty(product.category_id) && categoriesDict != null && categoriesDict.ContainsKey(product.category_id) ? categoriesDict[product.category_id] : "No Category");
}
<table class="table table-striped table-bordered table-hover align-middle" style="background:#fff;">
    <thead class="thead-dark">
        <tr>
            <th style="text-align:center;">Image</th>
            <th style="text-align:center;">Category</th>
            <th style="text-align:center;">Name</th>
            <th style="text-align:center;">Price</th>
            <th style="text-align:center;">Stock</th>
            <th style="text-align:center;">Actions</th>
        </tr>
    </thead>
    <tbody>
    @if (Model != null && Model.Any())
    {
        foreach (var group in groupedProducts)
        {
            <tr class="table-primary">
                <td colspan="6" style="font-weight:bold;font-size:1.1em;text-align:center;">@group.Key</td>
            </tr>
            foreach (var product in group)
            {
                <tr>
                    <td style="text-align:center;vertical-align:middle;">
                        @if (product.product_images != null && product.product_images.Any())
                        {
                            var mainImage = product.product_images.FirstOrDefault(img => img.image_type == "main");
                            if (mainImage != null)
                            {
                                <img src="@mainImage.image_url" alt="Product Main Image" style="width:60px;height:60px;object-fit:cover;border-radius:8px;" />
                            }
                            else
                            {
                                <img src="@product.product_images.First().image_url" alt="Product Image" style="width:60px;height:60px;object-fit:cover;border-radius:8px;" />
                            }
                        }
                        else
                        {
                            <span>No Image</span>
                        }
                    </td>
                    <td style="text-align:center;">@group.Key</td>
                    <td style="text-align:center;max-width:120px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;">@product.name</td>
                    <td style="text-align:center;">@product.price</td>
                    <td style="text-align:center;">@product.stock_quantity</td>
                    <td style="text-align:center;">
                        <a asp-action="EditProduct" asp-route-id="@product.id" class="btn btn-warning btn-sm">
                            <i class="fas fa-edit"></i> Edit
                        </a>
                        <a asp-action="DeleteProduct" asp-route-id="@product.id" class="btn btn-danger btn-sm">
                            <i class="fas fa-trash"></i> Delete
                        </a>
                    </td>
                </tr>
            }
        }
    }
    else
    {
        <tr>
            <td colspan="5" class="text-center text-muted">No products found</td>
        </tr>
    }
    </tbody>
</table>

<style>
    .table thead th {
        background: #343a40;
        color: #fff;
        font-weight: 600;
        text-align: center;
        vertical-align: middle;
    }
    .table-hover tbody tr:hover {
        background: #f1f7ff;
        transition: background 0.2s;
    }
    .table td, .table th {
        vertical-align: middle !important;
        text-align: center !important;
    }
    td[style*='white-space:nowrap;'] {
        white-space: nowrap !important;
    }
</style> 